//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.RoboticsDemo
{
    public class MVelocities : Message
    {
        public const string RosMessageName = "robotics_demo/Velocities";

        public float v_x;
        public float v_y;
        public float v_z;
        public float v_roll;
        public float v_pitch;
        public float v_yaw;

        public MVelocities()
        {
            this.v_x = 0.0f;
            this.v_y = 0.0f;
            this.v_z = 0.0f;
            this.v_roll = 0.0f;
            this.v_pitch = 0.0f;
            this.v_yaw = 0.0f;
        }

        public MVelocities(float v_x, float v_y, float v_z, float v_roll, float v_pitch, float v_yaw)
        {
            this.v_x = v_x;
            this.v_y = v_y;
            this.v_z = v_z;
            this.v_roll = v_roll;
            this.v_pitch = v_pitch;
            this.v_yaw = v_yaw;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.v_x));
            listOfSerializations.Add(BitConverter.GetBytes(this.v_y));
            listOfSerializations.Add(BitConverter.GetBytes(this.v_z));
            listOfSerializations.Add(BitConverter.GetBytes(this.v_roll));
            listOfSerializations.Add(BitConverter.GetBytes(this.v_pitch));
            listOfSerializations.Add(BitConverter.GetBytes(this.v_yaw));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.v_x = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.v_y = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.v_z = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.v_roll = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.v_pitch = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.v_yaw = BitConverter.ToSingle(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "MVelocities: " +
            "\nv_x: " + v_x.ToString() +
            "\nv_y: " + v_y.ToString() +
            "\nv_z: " + v_z.ToString() +
            "\nv_roll: " + v_roll.ToString() +
            "\nv_pitch: " + v_pitch.ToString() +
            "\nv_yaw: " + v_yaw.ToString();
        }
    }
}
